version: 0.2

env:
  parameter-store:
    CLOUDTRAIN_EKS_DEPLOY_ENABLED: "CLOUDTRAIN_CODEBUILD_EKS_DEPLOY_ENABLED"
    CLOUDTRAIN_EKS_CLUSTER_NAME: "CLOUDTRAIN_CODEBUILD_EKS_CLUSTER_NAME"
    CLOUDTRAIN_EKS_INGRESS_HOST: "CLOUDTRAIN_CODEBUILD_EKS_INGRESS_HOST"
    CLOUDTRAIN_EKS_NAMESPACE: "CLOUDTRAIN_CODEBUILD_EKS_NAMESPACE"
    CLOUDTRAIN_EKS_CLUSTER_ROUTE: "CLOUDTRAIN_CODEBUILD_EKS_CLUSTER_ROUTE"
  secrets-manager:
    NEXUS_USER: "cloudtrain-codebuild-nexus:user"
    NEXUS_PASSWORD: "cloudtrain-codebuild-nexus:password"
    HARBOR_USER: "cloudtrain-codebuild-harbor:user"
    HARBOR_PASSWORD: "cloudtrain-codebuild-harbor:token"
    SONARQUBE_TOKEN: "cloudtrain-codebuild-sonarqube:token"
    DOCKERHUB_USER: "cloudtrain-codebuild-dockerhub:docker-user"
    DOCKERHUB_PAT: "cloudtrain-codebuild-dockerhub:docker-pat"
    TEST_OIDC_CLIENT_CLIENT_ID: "cloudtrain-codebuild-common-test:test.oidc.client.clientId"
    TEST_OIDC_CLIENT_CLIENT_SECRET: "cloudtrain-codebuild-common-test:test.oidc.client.clientSecret"
    TEST_OIDC_CLIENT_ACCESS_TOKEN_URI: "cloudtrain-codebuild-common-test:test.oidc.client.accessTokenUri"
    TEST_OIDC_CLIENT_USER: "cloudtrain-codebuild-common-test:test.oidc.client.user"
    TEST_OIDC_CLIENT_PASSWORD: "cloudtrain-codebuild-common-test:test.oidc.client.password"

phases:
  install:
    on-failure: ABORT
    commands:
      - echo "Running phase install"
      - echo "Download and run common installation script"
      - aws s3 cp s3://s3-eu-west-1-cloudtrain-codebuild-shared/cloudtrain-codebuild-install.sh ~/
      - chmod u+x ~/cloudtrain-codebuild-install.sh
      - ~/cloudtrain-codebuild-install.sh
  pre_build:
    on-failure: ABORT
    commands:
      - echo "Running phase pre_build"
      - echo "Download common configuration files"
      - aws s3 cp s3://s3-eu-west-1-cloudtrain-codebuild-shared/.mvn/settings.xml /root/.m2/settings.xml
      - echo "Authenticate on DockerHub"
      - docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PAT
  build:
    on-failure: ABORT
    commands:
      - echo "Running phase build"
      - export BRANCH=main
      - echo "Running commit-stage of the build using branch [$BRANCH] and short commit hash [${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8}]"
      - mvn clean install -f pom.xml -B -ff -e -V -U -P commit-stage -Dchangelist=.$BRANCH -Dsha1=.${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8} -Dsonar.login=$SONARQUBE_TOKEN
      - |-
        if [ "$CLOUDTRAIN_EKS_DEPLOY_ENABLED" == "true" ]
        then
          echo "Authenticate on EKS"
          aws eks update-kubeconfig --name $CLOUDTRAIN_EKS_CLUSTER_NAME
          kubectl cluster-info
          echo "Running integration-test-stage of the build"
          mvn clean verify -f pom.xml -B -ff -e -V -U -P integration-test-stage -Dchangelist=.$BRANCH -Dsha1=.${CODEBUILD_RESOLVED_SOURCE_VERSION:0:8} -Dk8s.cluster.route=$CLOUDTRAIN_EKS_CLUSTER_ROUTE -Dk8s.cluster.namespace=$CLOUDTRAIN_EKS_NAMESPACE -Dk8s.ingress.host=$CLOUDTRAIN_EKS_INGRESS_HOST
        fi
  post_build:
    commands:
      - echo "Running phase post_build"

cache:
  paths:
    - "/root/.m2/**/*"
    - "/root/.sonar/cache/**/*"